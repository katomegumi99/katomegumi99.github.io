{"meta":{"title":"Kato_Megumi's blog","subtitle":"","description":"","author":"laoshifu","url":"http://example.com","root":"/"},"pages":[{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2024-04-15T06:04:24.206Z","comments":false,"path":"client/index.html","permalink":"http://example.com/client/index.html","excerpt":"","text":"直接下载 or 扫码下载："},{"title":"about","date":"2024-04-15T14:14:36.000Z","updated":"2024-04-16T15:49:17.123Z","comments":false,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"[かとう めぐみの个人博客] 与&nbsp; 加藤惠&nbsp; （ 加藤（かとう）惠（めぐみ） ） 对话中... bot_ui_ini()"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2024-04-15T06:04:24.206Z","comments":false,"path":"bangumi/index.html","permalink":"http://example.com/bangumi/index.html","excerpt":"","text":""},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2024-04-15T06:04:24.207Z","comments":true,"path":"comment/index.html","permalink":"http://example.com/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2024-04-15T09:44:51.626Z","comments":false,"path":"donate/index.html","permalink":"http://example.com/donate/index.html","excerpt":"","text":""},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2024-04-15T06:04:24.207Z","comments":false,"path":"lab/index.html","permalink":"http://example.com/lab/index.html","excerpt":"","text":"sakura主题balabala"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2024-04-16T15:54:21.371Z","comments":true,"path":"links/index.html","permalink":"http://example.com/links/index.html","excerpt":"","text":""},{"title":"music","date":"2024-04-15T01:14:28.000Z","updated":"2024-04-15T06:54:24.078Z","comments":false,"path":"music/index.html","permalink":"http://example.com/music/index.html","excerpt":"","text":""},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2024-04-15T06:04:24.207Z","comments":true,"path":"rss/index.html","permalink":"http://example.com/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2024-04-15T06:04:24.207Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2024-04-15T14:53:25.000Z","updated":"2024-04-16T16:03:59.079Z","comments":false,"path":"theme-sakura/index.html","permalink":"http://example.com/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2024-04-15T06:04:24.208Z","comments":false,"path":"video/index.html","permalink":"http://example.com/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }"}],"posts":[{"title":"自定义SpringMVC中的类型转换器Converter与ConverterFactory","slug":"自定义SpringMVC中的类型转换器Converter与ConverterFactory","date":"2024-10-23T08:09:25.000Z","updated":"2024-10-23T08:54:39.540Z","comments":true,"path":"2024/10/23/自定义SpringMVC中的类型转换器Converter与ConverterFactory/","permalink":"http://example.com/2024/10/23/%E8%87%AA%E5%AE%9A%E4%B9%89SpringMVC%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E5%99%A8Converter%E4%B8%8EConverterFactory/","excerpt":"","text":"自定义Converter首先创建一个converter类并继承converter接口，并重写其中的converter方法。例如： @Component public class StringToItemTypeConverter implements Converter&lt;String, ItemType> { @Override public ItemType convert(String code) { for (ItemType value : ItemType.values()) { if (value.getCode().equals(Integer.valueOf(code))) { return value; } } throw new IllegalArgumentException(\"code非法\"); } } 然后创建WebMvcConfiguration类并继承WebMvcConfigurer接口，将创建的converter类注册到SpringMVC中。例如： @Configuration public class WebMvcConfiguration implements WebMvcConfigurer { @Autowired private StringToItemTypeConverter stringToItemTypeConverter; @Override public void addFormatters(FormatterRegistry registry) { registry.addConverter(this.stringToItemTypeConverter); } } 自定义ConverterFactory当我们有很多的类型都需要考虑类型转换问题时，我们可以尝试自定义一个ConverterFactory，这个接口可以将同一个转换逻辑应用到一个接口的所有实现类，它所转换的目标类型是我们所需要转换的目标类型的父类。 首先创建一个converterFactory类并继承converterFactory接口，并重写其中的converterFactory方法。例如： @Component public class StringToBaseEnumConverterFactory implements ConverterFactory&lt;String, BaseEnum> { @Override public &lt;T extends BaseEnum> Converter&lt;String, T> getConverter(Class&lt;T> targetType) { return new Converter&lt;String, T>() { @Override public T convert(String source) { for (T enumConstant : targetType.getEnumConstants()) { if (enumConstant.getCode().equals(Integer.valueOf(source))) { return enumConstant; } } throw new IllegalArgumentException(\"非法的枚举值:\" + source); } }; } } 然后创建WebMvcConfiguration类并继承WebMvcConfigurer接口，将创建的converterFactory类注册到SpringMVC中。例如： @Configuration public class WebMvcConfiguration implements WebMvcConfigurer { @Autowired private StringToBaseEnumConverterFactory stringToBaseEnumConverterFactory; @Override public void addFormatters(FormatterRegistry registry) { registry.addConverterFactory(this.stringToBaseEnumConverterFactory); } }","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"web","slug":"web","permalink":"http://example.com/tags/web/"}],"author":"hojun"},{"title":"二次元图集","slug":"图集","date":"2024-05-04T12:55:20.000Z","updated":"2024-05-04T13:39:02.885Z","comments":true,"path":"2024/05/04/图集/","permalink":"http://example.com/2024/05/04/%E5%9B%BE%E9%9B%86/","excerpt":"","text":"","categories":[],"tags":[{"name":"图集","slug":"图集","permalink":"http://example.com/tags/%E5%9B%BE%E9%9B%86/"}],"author":"Kato_Megumi"},{"title":"【洛谷】P5707 【深基2.例12】上学迟到题解","slug":"【洛谷】P5707-【深基2-例12】上学迟到题解","date":"2024-04-17T15:50:57.000Z","updated":"2024-04-21T05:33:55.089Z","comments":true,"path":"2024/04/17/【洛谷】P5707-【深基2-例12】上学迟到题解/","permalink":"http://example.com/2024/04/17/%E3%80%90%E6%B4%9B%E8%B0%B7%E3%80%91P5707-%E3%80%90%E6%B7%B1%E5%9F%BA2-%E4%BE%8B12%E3%80%91%E4%B8%8A%E5%AD%A6%E8%BF%9F%E5%88%B0%E9%A2%98%E8%A7%A3/","excerpt":"","text":"【洛谷】P5707 【深基2.例12】上学迟到题解题目描述学校和 yyy 的家之间的距离为 $s$米，而 yyy 以 $v$ 米每分钟的速度匀速走向学校。 在上学的路上，yyy 还要额外花费 $10$ 分钟的时间进行垃圾分类。 学校要求必须在上午 $\\textrm{8:00}$ 到达，请计算在不迟到的前提下，yyy 最晚能什么时候出门。 由于路途遥远，yyy 可能不得不提前一点出发，但是提前的时间不会超过一天。 输入格式一行两个正整数 $s,v$，分别代表路程和速度。 输出格式输出一个$24$ 小时制下的时间，代表 yyy 最晚的出发时间。 输出格式为 $\\texttt{HH:MM}$，分别代表该时间的时和分。必须输出两位，不足前面补 $0$。 样例 #1样例输入 #1100 99 样例输出 #107:48 提示对于 $100%$ 的数据，$1 \\le s,v \\le 10^4$。 public static void main(String[] args) { Scanner scanner = new Scanner(System.in); //家距离学校的距离 int s = scanner.nextInt(); //xxx去学校的速度 int v = scanner.nextInt(); //不丢垃圾花费的时间 int time = 0; if ((s % v) == 0){ time = (int) s / v; }else { time = (int) (s / v + 1); } Calendar c = Calendar.getInstance(); c.set(2024, Calendar.APRIL,17, 8, 0, 0); //减去丢垃圾花费的10分钟 c.add(Calendar.MINUTE, -10); //减去不丢垃圾花费的时间 c.add(Calendar.MINUTE, - time); SimpleDateFormat sdf = new SimpleDateFormat(\"HH:mm\"); System.out.println(sdf.format(c.getTime())); }","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"web","slug":"web","permalink":"http://example.com/tags/web/"}]}],"categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"web","slug":"web","permalink":"http://example.com/tags/web/"},{"name":"图集","slug":"图集","permalink":"http://example.com/tags/%E5%9B%BE%E9%9B%86/"}]}