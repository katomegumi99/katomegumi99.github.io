{"meta":{"title":"Kato_Megumi's blog","subtitle":"","description":"","author":"laoshifu","url":"http://example.com","root":"/"},"pages":[{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2024-04-15T06:04:24.206Z","comments":false,"path":"client/index.html","permalink":"http://example.com/client/index.html","excerpt":"","text":"直接下载 or 扫码下载："},{"title":"about","date":"2024-04-15T14:14:36.000Z","updated":"2024-04-16T15:49:17.123Z","comments":false,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"[かとう めぐみの个人博客] 与&nbsp; 加藤惠&nbsp; （ 加藤（かとう）惠（めぐみ） ） 对话中... bot_ui_ini()"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2024-04-15T06:04:24.206Z","comments":false,"path":"bangumi/index.html","permalink":"http://example.com/bangumi/index.html","excerpt":"","text":""},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2024-04-15T06:04:24.207Z","comments":true,"path":"comment/index.html","permalink":"http://example.com/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2024-04-15T09:44:51.626Z","comments":false,"path":"donate/index.html","permalink":"http://example.com/donate/index.html","excerpt":"","text":""},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2024-04-15T06:04:24.207Z","comments":false,"path":"lab/index.html","permalink":"http://example.com/lab/index.html","excerpt":"","text":"sakura主题balabala"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2024-04-16T15:54:21.371Z","comments":true,"path":"links/index.html","permalink":"http://example.com/links/index.html","excerpt":"","text":""},{"title":"music","date":"2024-04-15T01:14:28.000Z","updated":"2024-04-15T06:54:24.078Z","comments":false,"path":"music/index.html","permalink":"http://example.com/music/index.html","excerpt":"","text":""},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2024-04-15T06:04:24.207Z","comments":true,"path":"rss/index.html","permalink":"http://example.com/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2024-04-15T06:04:24.207Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2024-04-15T14:53:25.000Z","updated":"2024-04-16T16:03:59.079Z","comments":false,"path":"theme-sakura/index.html","permalink":"http://example.com/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2024-04-15T06:04:24.208Z","comments":false,"path":"video/index.html","permalink":"http://example.com/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }"}],"posts":[{"title":"jQuery","slug":"jQuery","date":"2024-06-26T12:03:15.000Z","updated":"2024-06-26T14:39:27.527Z","comments":true,"path":"2024/06/26/jQuery/","permalink":"http://example.com/2024/06/26/jQuery/","excerpt":"","text":"1. jQuery的基本概念jQuery中的”$”到底是什么？ 答：是一个函数。 jQuery对象的本质是什么？ 答：jQuery对象时Dom对象的数组 + jQuery提供的一系列功能函数 2. jQuery 对象和dom对象区分2.1Dom对象1.通过**getElementById( )**方法查询出来的标签对象是Dom对象 2.通过**getElementsByName( )**方法查询出来的标签对象是Dom对象 3.通过**getElementsByTagName( )**方法查询出来的标签对象是Dom对象 4.通过**createElement( )**方法创建的对象是Dom对象 5.DOM 对象Alert出来的效果是：[object HTML 标签名 Element] 2.2 jQuery对象1.通过jQuery对象的API创建的对象，是jQuery对象 2.通过jQuery包装的Dom对象，也是jQuery对象 3.通过jQuery提供的API查询到的对象，是jQuery对象 4.jQuery 对象 Alert 出来的效果是：[Object Object] 2.3 jQuery 对象和Dom对象使用区别1.jQuery对象不能使用Dom对象的属性和方法 2.Dom对象也不能使用jQuery对象的属性和方法 2.4 Dom对象和jQuery对象的互相转换1.Dom对象转换为jQuery对象​ 1.先有Dom对象 ​ 2.$( Dom对象 )就可以转换为jQuery对象 ​ var $obj = $(Dom对象) 2.jQuery对象转换为Dom对象​ 1.先有jQuery对象 ​ 2.jQuery对象[下标]去除相应的Dom对象 ​ var dom = $obj[下标] 3. jQuery选择器3.1基本选择器#ID 选择器: 根据id查找标签对象 // 1.选择 id 为 one 的元素 \"background-color\",\"#bbffaa\" $(\"#one\").css(\"background-color\",\"#bbffaa\"); .class 选择器: 根据class查找对象标签 // 2.选择 class 为 mini 的所有元素 $(\".mini\").css(\"background-color\",\"#bbffaa\"); element 选择器: 根据标签名查找标签对象 // 3.选择 标签名是 div 的所有元素 $(\"div\").css(\"background-color\",\"#bbffaa\"); * 选择器:表示任意的,所有的元素 // 4.选择所有的元素 $(\"*\").css(\"background-color\",\"#bbffaa\"); selector1 , selector2 , selectorN 组合选择器: 合并选择器1, 选择器2的结果并返回 // 5.选择所有的 span 元素和id为two的元素 $(\"span, #two\").css(\"background-color\",\"#bbffaa\") 3.2 层级选择器ancestor descendant 后代选择器: 在给定的祖先元素下匹配所有的后代元素 //1.选择 body 内的所有 div 元素 $(\"body div\").css(\"background\", \"#bbffaa\"); parent &gt; child 子元素选择器: 在给定的父元素下匹配所有的子元素 //2.在 body 内, 选择div子元素 $(\"body > div\").css(\"background\", \"#bbffaa\"); prev + next 相邻元素选择器: 匹配所有紧接在prev元素后的next元素 //3.选择 id 为 one 的下一个 div 元素 $(\"#one + div\").css(\"background\", \"#bbffaa\"); prev + siblings 之后的兄弟元素选择器: 匹配prev元素之后的所有**siblings(兄弟)**元素 //4.选择 id 为 two 的元素后面的所有 div 兄弟元素 $(\"#two ~ div\").css(\"background\", \"#bbffaa\"); 3.3过滤选择器3.3.1 基本过滤器:first 获取第一个元素**(重点)** //1.选择第一个 div 元素 $(\"div:first\").css(\"background\", \"#bbffaa\"); :last 获取最后一个元素**(重点)** //2.选择最后一个 div 元素 $(\"div:last\").css(\"background\", \"#bbffaa\"); :not(selector) 去除所有与给定选择器匹配的元素 //3.选择class不为 one 的所有 div 元素 $(\"div:not(.one)\").css(\"background\", \"#bbffaa\"); :even 匹配所有索引值为偶数的元素,从0开始计算 //4.选择索引值为偶数的 div 元素 $(\"div:even\").css(\"background\", \"#bbffaa\"); :odd 匹配所有索引值为奇数的元素,从0开始计算 //5.选择索引值为奇数的 div 元素 $(\"div:odd\").css(\"background\", \"#bbffaa\"); :eq(index) 匹配一个给定索引值的元素**(重点)** //6.选择索引值为等于 3 的 div 元素 $(\"div:eq(3)\").css(\"background\", \"#bbffaa\"); :gt(index) 匹配所有大于给定索引值的元素 //7.选择索引值为大于 3 的 div 元素 $(\"div:gt(3)\").css(\"background\", \"#bbffaa\"); :lt(index) 匹配所有小于给定索引值的元素 //8.选择索引值为小于 3 的 div 元素 $(\"div:lt(3)\").css(\"background\", \"#bbffaa\"); :header 匹配如h1,h2,h3之类的标题元素 //9.选择所有的标题元素 $(\":header\").css(\"background\", \"#bbffaa\"); :animated 匹配所有正在执行动画的元素 //10.选择当前正在执行动画的所有元素 $(\":animated\").css(\"background\", \"#bbffaa\"); //11.选择没有执行动画的最后一个div $(\"div:not(:animated):last\").css(\"background\", \"#bbffaa\"); 3.3.2 内容过滤器:contains(text) 匹配包含给定文本的元素 //1.选择 含有文本 &#39;di&#39; 的 div 元素 $(&quot;div:contains(&#39;id&#39;)&quot;).css(&quot;background&quot;, &quot;#bbffaa&quot;); :empty 匹配所有不包含子元素或者文本的空元素 //2.选择不包含子元素(或者文本元素) 的 div 空元素 $(&quot;div:empty&quot;).css(&quot;background&quot;, &quot;#bbffaa&quot;); :parent 匹配含有子元素或者文本的元素 //3.选择含有子元素(或者文本元素)的div元素 $(&quot;div:parent&quot;).css(&quot;background&quot;, &quot;#bbffaa&quot;); :has(selector) 匹配含有选择器所匹配的元素的元素 //4.选择含有 class 为 mini 元素的 div 元素 $(&quot;div:has(.mini)&quot;).css(&quot;background&quot;, &quot;#bbffaa&quot;); 3.3.3 属性过滤器[attribute] 匹配包含给定属性的元素**(重点)** //1.选取含有 属性title 的div元素 $(&quot;div[title]&quot;).css(&quot;background&quot;, &quot;#bbffaa&quot;); [attribute&#x3D;value] 匹配给定的属性是某个特定值的元素**(重点)** //2.选取 属性title值等于&#39;test&#39;的div元素 $(&quot;div[title=&#39;test&#39;]&quot;).css(&quot;background&quot;, &quot;#bbffaa&quot;); [attribute!&#x3D;value] 匹配所有不含有指定的属性,或者属性不等于特定值的元素 //3.选取 属性title值不等于&#39;test&#39;的div元素(*没有属性title的也将被选中) $(&quot;div[title!=&#39;test&#39;]&quot;).css(&quot;background&quot;, &quot;#bbffaa&quot;); [attribute^&#x3D;value] 匹配给定的属性是以某些值开始的元素 //4.选取 属性title值 以&#39;te&#39;开始 的div元素 $(&quot;div[title^=&#39;te&#39;]&quot;).css(&quot;background&quot;, &quot;#bbffaa&quot;); [attribute$&#x3D;value] 匹配给定的属性是以某些值结尾的元素 //5.选取 属性title值 以&#39;est&#39;结束 的div元素 $(&quot;div[title$=&#39;est&#39;]&quot;).css(&quot;background&quot;, &quot;#bbffaa&quot;); [attribute*&#x3D;value] 匹配给定的属性是以包含某些值的元素 //6.选取 属性title值 含有&#39;es&#39;的div元素 $(&quot;div[title*=&#39;es&#39;]&quot;).css(&quot;background&quot;, &quot;#bbffaa&quot;); [attrSel1] [attrSel2] [attrSelN] 复合属性选择器，需要同时满足多个条件时使用。 //7.首先选取有属性id的div元素，然后在结果中 选取属性title值 含有&#39;es&#39;的 div 元素 $(&quot;div[id][title*=&#39;es&#39;]&quot;).css(&quot;background&quot;, &quot;#bbffaa&quot;); //8.选取 含有 title 属性值, 且title 属性值不等于 test 的 div 元素 $(&quot;div[title][title!=&#39;test&#39;]&quot;).css(&quot;background&quot;, &quot;#bbffaa&quot;); 3.3.4 表单过滤器:input 匹配所有input,textarea,select和button元素 :text 匹配所有文本输入框**(重点)** :password 匹配所有的密码输入框**(重点)** :radio 匹配所有的单选框**(重点)** :checkbox 匹配所有的复选框**(重点)** :submit匹配所有提交按钮 :image 匹配所有img标签 :reset 匹配所有重置按钮 :button 匹配所有inputtype&#x3D;button按钮 :file 匹配所有inputtype&#x3D;file 文件上传 :hidden 匹配所有不可见元素display:none 或 inputtype&#x3D;hidden 3.3.5 表单对象属性过滤器:enabled 匹配所有可用元素 //1.对表单内 可用input 赋值操作 // val()方法可以操作表单的value属性值 // 可以设置和获取 $(&quot;:text:enabled&quot;).val(&quot;test&quot;); **:disabled **匹配所有不可用元素 //2.对表单内 不可用input 赋值操作 $(&quot;:text:disabled&quot;).val(&quot;对不可用input进行操作&quot;); :checked 匹配所选中的单选，复选，和下拉列表中选中的option标签对象**(重点)** //3.获取多选框选中的个数 使用size()方法获取选取到的元素集合的元素个数 alert($(&quot;:checkbox:checked&quot;).length); :selected 匹配所有选中的option**(重点)** // 1.获取选中的option标签对象 var $options = $(&quot;select option:selected&quot;); // 2.遍历，获取option标签中的文本内容 $options.each(function () &#123; // 在 each 遍历时function函数中，有一个this对象。这个this对象是当前遍历道德dom对象 alert(this.innerHTML) &#125;) 4. jQuery元素筛选eq() 获取给定索引的元素 功能跟 :eq() 一样 first() 获取第一个元素 功能跟 :first 一样 last() 获取最后一个元素 功能跟 :last 一样 filter(exp) 留下匹配的元素 is(exp) 判断是否匹配给定的选择器，只要有一个匹配就返回，true has(exp) 返回包含有匹配选择器的元素的元素 功能跟 :has 一样 not(exp) 删除匹配选择器的元素 功能跟 :not 一样 children(exp) 返回匹配给定选择器的子元素 功能跟 parent&gt;child 一样 find(exp) 返回匹配给定选择器的后代元素 功能跟 ancestordescendant 一样 next() 返回当前元素的下一个兄弟元素 功能跟 prev+next 功能一样 nextAll() 返回当前元素后面所有的兄弟元素 功能跟 prev~siblings 功能一样 nextUntil() 返回当前元素到指定匹配的元素为止的后面元素 parent() 返回父元素 prev(exp) 返回当前元素的上一个兄弟元素 prevAll() 返回当前元素前面所有的兄弟元素 prevUnit(exp) 返回当前元素到指定匹配的元素为止的前面元素 siblings(exp) 返回所有兄弟元素 add() 把add匹配的选择器的元素添加到当前jquery对象中 5. jQuery的属性操作html() 它可以设置和获取起始标签和结束标签中的内容。 跟dom属性innerHTML 一样。 text() 它可以设置和获取起始标签和结束标签中的文本。 跟dom属性innerText一样。 val() 它可以设置和获取表单项的value属性值。 val 方法同时设置多个表单项的选中状态： 跟dom属性value一样 attr() 可以设置和获取属性的值，不推荐操作checked、readOnly、selected、disabled等等 attr方法还可以操作非标准的属性。比如自定义属性：abc,bbj prop() 可以设置和获取属性的值,只推荐操作checked、readOnly、selected、disabled等等 6. Dom的增删改6.1 内部插入appendTo() a.appendTo(b) 把a插入到b子元素末尾，成为最后一个子元素 prependTo() a.prependTo(b) 把a插到b所有子元素前面，成为第一个子元素 6.2 外部插入insertAfter() a.insertAfter(b) 得到ba insertBefore() a.insertBefore(b) 得到ab 6.3 替换:replaceWith() a.replaceWith(b) 用b替换掉a replaceAll() a.replaceAll(b) 用a替换掉所有b 6.4 删除：remove() a.remove(); 删除a标签 empty() a.empty(); 清空a标签里的内容 7. jQuery事件操作$(function(){}); 和 window.onload&#x3D;function(){} 的区别？7.1 他们分别是在什么时候触发？1、jQuery的页面加载完成之后是浏览器的内核解析完页面的标签创建好DOM对象之后就会马上执行。 2、原生js的页面加载完成之后，除了要等浏览器内核解析完标签创建好DOM对象，还要等标签显示时需要的内容加载 完成。 他们触发的顺序？1、jQuery 页面加载完成之后先执行 2、原生js的页面加载完成之后 他们执行的次数？1、原生js的页面加载完成之后，只会执行最后一次的赋值函数。 2、jQuery 的页面加载完成之后是全部把注册的function函数，依次顺序全部执行。 jQuery 中其他的事件处理方法：click() 它可以绑定单击事件，以及触发单击事件 mouseover() 鼠标移入事件 mouseout() 鼠标移出事件 bind() 可以给元素一次性绑定一个或多个事件。 one() 使用上跟bind一样。但是one方法绑定的事件只会响应一次。 unbind() 跟bind 方法相反的操作，解除事件的绑定 也是用来绑定事件。 live() 它可以用来绑定选择器匹配的所有元素的事件。哪怕这个元素是后面动态创建出 来的也有效 7.2 事件的冒泡什么是事件的冒泡？事件的冒泡是指，父子元素同时监听同一个事件。当触发子元素的事件的时候，同一个事件也被传递到了父元素的事件里去 响应。 那么如何阻止事件冒泡呢？在子元素事件函数体内，return false; 可以阻止事件的冒泡传递。 原生JavaScript获取事件对象window.onload = function () &#123; document.getElementById(&quot;areaDiv&quot;).onclick = function (event) &#123; console.log(event); &#125; &#125; jQuery代码获取事件对象$(function () &#123; $(&quot;#areaDiv&quot;).click(function (event) &#123; console.log(event); &#125;); &#125;); 使用bind同时对多个事件绑定同一个函数。怎么获取当前操作是什么事件。$(&quot;#areaDiv&quot;).bind(&quot;mouseover mouseout&quot;,function (event) &#123; if (event.type == &quot;mouseover&quot;) &#123; console.log(&quot;鼠标移入&quot;); &#125; else if (event.type == &quot;mouseout&quot;) &#123; console.log(&quot;鼠标移出&quot;); &#125; &#125;);","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"web","slug":"web","permalink":"http://example.com/tags/web/"}],"author":"Kato_Megumi"},{"title":"二次元图集","slug":"图集","date":"2024-05-04T12:55:20.000Z","updated":"2024-05-04T13:39:02.885Z","comments":true,"path":"2024/05/04/图集/","permalink":"http://example.com/2024/05/04/%E5%9B%BE%E9%9B%86/","excerpt":"","text":"","categories":[],"tags":[{"name":"图集","slug":"图集","permalink":"http://example.com/tags/%E5%9B%BE%E9%9B%86/"}],"author":"Kato_Megumi"},{"title":"【洛谷】P5707 【深基2.例12】上学迟到题解","slug":"【洛谷】P5707-【深基2-例12】上学迟到题解","date":"2024-04-17T15:50:57.000Z","updated":"2024-04-21T05:33:55.089Z","comments":true,"path":"2024/04/17/【洛谷】P5707-【深基2-例12】上学迟到题解/","permalink":"http://example.com/2024/04/17/%E3%80%90%E6%B4%9B%E8%B0%B7%E3%80%91P5707-%E3%80%90%E6%B7%B1%E5%9F%BA2-%E4%BE%8B12%E3%80%91%E4%B8%8A%E5%AD%A6%E8%BF%9F%E5%88%B0%E9%A2%98%E8%A7%A3/","excerpt":"","text":"【洛谷】P5707 【深基2.例12】上学迟到题解题目描述学校和 yyy 的家之间的距离为 $s$米，而 yyy 以 $v$ 米每分钟的速度匀速走向学校。 在上学的路上，yyy 还要额外花费 $10$ 分钟的时间进行垃圾分类。 学校要求必须在上午 $\\textrm{8:00}$ 到达，请计算在不迟到的前提下，yyy 最晚能什么时候出门。 由于路途遥远，yyy 可能不得不提前一点出发，但是提前的时间不会超过一天。 输入格式一行两个正整数 $s,v$，分别代表路程和速度。 输出格式输出一个$24$ 小时制下的时间，代表 yyy 最晚的出发时间。 输出格式为 $\\texttt{HH:MM}$，分别代表该时间的时和分。必须输出两位，不足前面补 $0$。 样例 #1样例输入 #1100 99 样例输出 #107:48 提示对于 $100%$ 的数据，$1 \\le s,v \\le 10^4$。 public static void main(String[] args) { Scanner scanner = new Scanner(System.in); //家距离学校的距离 int s = scanner.nextInt(); //xxx去学校的速度 int v = scanner.nextInt(); //不丢垃圾花费的时间 int time = 0; if ((s % v) == 0){ time = (int) s / v; }else { time = (int) (s / v + 1); } Calendar c = Calendar.getInstance(); c.set(2024, Calendar.APRIL,17, 8, 0, 0); //减去丢垃圾花费的10分钟 c.add(Calendar.MINUTE, -10); //减去不丢垃圾花费的时间 c.add(Calendar.MINUTE, - time); SimpleDateFormat sdf = new SimpleDateFormat(\"HH:mm\"); System.out.println(sdf.format(c.getTime())); }","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"web","slug":"web","permalink":"http://example.com/tags/web/"}]}],"categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"web","slug":"web","permalink":"http://example.com/tags/web/"},{"name":"图集","slug":"图集","permalink":"http://example.com/tags/%E5%9B%BE%E9%9B%86/"}]}